{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    films: [],\n    actors: [],\n    add: null\n  },\n  getters: {\n    getFilms(state) {\n      return state.films;\n    },\n    getActors(state) {\n      return state.actors;\n    },\n    getActors(state) {\n      return state.actors;\n    }\n  },\n  mutations: {\n    setFilms(state, payload) {\n      state.films = payload;\n    },\n    setActors(state, payload) {\n      state.actors = payload;\n    },\n    setAdd(state, payload) {\n      state.add = payload;\n    },\n    setAllActors(state, payload) {\n      state.allActors = payload;\n    }\n  },\n  actions: {\n    async getFilms({\n      commit\n    }) {\n      const response = await fetch(`http://127.0.0.1:8080/films`, {\n        method: 'GET'\n      });\n      let res = await response.json();\n      console.log(res);\n      commit('setFilms', res);\n    },\n    async getActors({\n      commit\n    }, payload) {\n      const response = await fetch(`http://127.0.0.1:8080/actors?filmId=${payload.filmId}`, {\n        method: 'GET'\n      });\n      let res = await response.json();\n      console.log(res);\n      commit('setActors', res);\n    },\n    async getAllActors({\n      commit\n    }, payload) {\n      const response = await fetch(`http://127.0.0.1:8080/actors`, {\n        method: 'GET'\n      });\n      let res = await response.json();\n      console.log(res);\n      commit('setAllActors', res);\n    },\n    async addNew({\n      commit\n    }, payload) {\n      const response = await fetch(`http://127.0.0.1:8080/films`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          film_name: payload.name,\n          filming_procentage: payload.procentage,\n          genre: payload.genre,\n          dauration: payload.duration,\n          rating: payload.rating,\n          budget_num: payload.budget,\n          box_office_num: payload.box_office,\n          film_date: payload.date\n        })\n      });\n      let res = await response.json();\n      if (res.detail != \"Name nust be unique\") {\n        alert(\"New film added\");\n        commit('setAdd', 1);\n      } else {\n        alert(\"Name nust be unique\");\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","films","actors","add","getters","getFilms","getActors","mutations","setFilms","payload","setActors","setAdd","setAllActors","allActors","actions","commit","response","fetch","method","res","json","console","log","filmId","getAllActors","addNew","headers","body","JSON","stringify","film_name","name","filming_procentage","procentage","genre","dauration","duration","rating","budget_num","budget","box_office_num","box_office","film_date","date","detail","alert","modules"],"sources":["E:/ХНУРЕ/3 курс/СРБД/yevhen.tkachenko.sdbs.vue/sdbs-lab3/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    films:[],\n    actors:[],\n    add:null\n  },\n  getters: {\n    getFilms(state){\n      return state.films\n    },\n    getActors(state){\n      return state.actors\n    },\n    getActors(state){\n      return state.actors\n    },\n  },\n  mutations: {\n    setFilms(state,payload){\n      state.films = payload\n    },\n    setActors(state,payload){\n      state.actors = payload\n    },\n    setAdd(state,payload){\n      state.add = payload\n    },\n    setAllActors(state,payload){\n      state.allActors = payload\n    }\n  },\n  actions: {\n    async getFilms({ commit }) {\n      const response = await fetch(`http://127.0.0.1:8080/films`, {\n              method: 'GET',\n            });\n            let res = await response.json()\n            console.log(res)\n            commit('setFilms',res)\n    },\n    async getActors({ commit },payload) {\n      const response = await fetch(`http://127.0.0.1:8080/actors?filmId=${payload.filmId}`, {\n              method: 'GET',\n            });\n            let res = await response.json()\n            console.log(res)\n            commit('setActors',res)\n    },\n    async getAllActors({ commit },payload) {\n      const response = await fetch(`http://127.0.0.1:8080/actors`, {\n              method: 'GET',\n            });\n            let res = await response.json()\n            console.log(res)\n            commit('setAllActors',res)\n    },\n    async addNew({commit},payload) {\n\n      const response = await fetch(`http://127.0.0.1:8080/films`, {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                film_name:payload.name,\n                filming_procentage:payload.procentage,\n                genre:payload.genre,\n                dauration:payload.duration,\n                rating:payload.rating,\n                budget_num:payload.budget,\n                box_office_num:payload.box_office,\n                film_date:payload.date,\n              }),\n            });\n            let res = await response.json()\n            if(res.detail != \"Name nust be unique\"){\n              alert(\"New film added\")\n              commit('setAdd',1)\n            }else{\n              alert(\"Name nust be unique\")\n            }\n      \n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}