{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"label\", {\n    for: \"category-select\"\n  }, \"Виберіть категорію:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedCategoryId = $event),\n    id: \"category-select\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$store.getters.getAllCategories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.selectedCategoryId]])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","for","_cache","$event","_ctx","selectedCategoryId","id","_Fragment","_renderList","$store","getters","getAllCategories","category","key","value","name","_hoisted_1"],"sources":["E:\\ХНУРЕ\\3 курс\\СРБД\\yevhen.tkachenko.sdbs.vue\\sdbs-lab3\\src\\components\\Lab3.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <label for=\"category-select\">Виберіть категорію:</label>\r\n            <select v-model=\"selectedCategoryId\" id=\"category-select\">\r\n            <option v-for=\"category in this.$store.getters.getAllCategories\" :key=\"category.id\" :value=\"category.id\">\r\n                {{ category.name }}\r\n            </option>\r\n            </select>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Lab3C',\r\n    data() {\r\n      return {\r\n        selectedCategoryId: ,\r\n      };\r\n    },\r\n    mounted(){\r\n      this.$store.dispatch('getFilms') \r\n    },\r\n  }\r\n  </script>\r\n  "],"mappings":";mBAAA;;uBACIA,mBAAA,CAOM,c,0BANFC,mBAAA,CAAwD;IAAjDC,GAAG,EAAC;EAAiB,GAAC,qBAAmB,sB,gBAC5CD,mBAAA,CAIS;IAPrB,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG6BC,IAAA,CAAAC,kBAAkB,GAAAF,MAAA;IAAEG,EAAE,EAAC;yBACxCP,mBAAA,CAESQ,SAAA,QANrBC,WAAA,MAI4CC,MAAM,CAACC,OAAO,CAACC,gBAAgB,EAAhDC,QAAQ;yBAAvBb,mBAAA,CAES;MAFyDc,GAAG,EAAED,QAAQ,CAACN,EAAE;MAAGQ,KAAK,EAAEF,QAAQ,CAACN;wBAC9FM,QAAQ,CAACG,IAAI,wBALhCC,UAAA;2EAG6BZ,IAAA,CAAAC,kBAAkB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}